# pip install docplex
# pip install cplex

from docplex.mp.model import Model

model = Model(name='Menu Optimization')

# Declare Variables for Menu Items
p1 = model.integer_var(lb=0, ub=float('inf'), name='p1')
p2 = model.integer_var(lb=0, ub=float('inf'), name='p2')
p3 = model.integer_var(lb=0, ub=float('inf'), name='p3')
p4 = model.integer_var(lb=0, ub=float('inf'), name='p4')
p5 = model.integer_var(lb=0, ub=float('inf'), name='p5')
p6 = model.integer_var(lb=0, ub=float('inf'), name='p6')
p7 = model.integer_var(lb=0, ub=float('inf'), name='p7')
p8 = model.integer_var(lb=0, ub=float('inf'), name='p8')
p9 = model.integer_var(lb=0, ub=float('inf'), name='p9')
p10 = model.integer_var(lb=0, ub=float('inf'), name='p10')
p11 = model.integer_var(lb=0, ub=float('inf'), name='p11')
p12 = model.integer_var(lb=0, ub=float('inf'), name='p12')
p13 = model.integer_var(lb=0, ub=float('inf'), name='p13')
p14 = model.integer_var(lb=0, ub=float('inf'), name='p14')
p15 = model.integer_var(lb=0, ub=float('inf'), name='p15')
p16 = model.integer_var(lb=0, ub=float('inf'), name='p16')
p17 = model.integer_var(lb=0, ub=float('inf'), name='p17')
p18 = model.integer_var(lb=0, ub=float('inf'), name='p18')
p19 = model.integer_var(lb=0, ub=float('inf'), name='p19')
p20 = model.integer_var(lb=0, ub=float('inf'), name='p20')
p21 = model.integer_var(lb=0, ub=float('inf'), name='p21')
p22 = model.integer_var(lb=0, ub=float('inf'), name='p22')
p23 = model.integer_var(lb=0, ub=float('inf'), name='p23')
p24 = model.integer_var(lb=0, ub=float('inf'), name='p24')
p25 = model.integer_var(lb=0, ub=float('inf'), name='p25')
p26 = model.integer_var(lb=0, ub=float('inf'), name='p26')
p27 = model.integer_var(lb=0, ub=float('inf'), name='p27')
p28 = model.integer_var(lb=0, ub=float('inf'), name='p28')
p29 = model.integer_var(lb=0, ub=float('inf'), name='p29')
p30 = model.integer_var(lb=0, ub=float('inf'), name='p30')
p31 = model.integer_var(lb=0, ub=float('inf'), name='p31')
p32 = model.integer_var(lb=0, ub=float('inf'), name='p32')
p33 = model.integer_var(lb=0, ub=float('inf'), name='p33')
p34 = model.integer_var(lb=0, ub=float('inf'), name='p34')
p35 = model.integer_var(lb=0, ub=float('inf'), name='p35')
p36 = model.integer_var(lb=0, ub=float('inf'), name='p36')
p37 = model.integer_var(lb=0, ub=float('inf'), name='p37')
p38 = model.integer_var(lb=0, ub=float('inf'), name='p38')
p39 = model.integer_var(lb=0, ub=float('inf'), name='p39')
p40 = model.integer_var(lb=0, ub=float('inf'), name='p40')

# Declare Variables for Ingredient Packages
x1 = model.integer_var(lb=0, ub=float('inf'), name='x1')
x2 = model.integer_var(lb=0, ub=float('inf'), name='x2')
x3 = model.integer_var(lb=0, ub=float('inf'), name='x3')
x4 = model.integer_var(lb=0, ub=float('inf'), name='x4')
x5 = model.integer_var(lb=0, ub=float('inf'), name='x5')
x6 = model.integer_var(lb=0, ub=float('inf'), name='x6')
x7 = model.integer_var(lb=0, ub=float('inf'), name='x7')
x8 = model.integer_var(lb=0, ub=float('inf'), name='x8')
x9 = model.integer_var(lb=0, ub=float('inf'), name='x9')
x10 = model.integer_var(lb=0, ub=float('inf'), name='x10')
x11 = model.integer_var(lb=0, ub=float('inf'), name='x11')
x12 = model.integer_var(lb=0, ub=float('inf'), name='x12')
x13 = model.integer_var(lb=0, ub=float('inf'), name='x13')
x14 = model.integer_var(lb=0, ub=float('inf'), name='x14')
x15 = model.integer_var(lb=0, ub=float('inf'), name='x15')
x16 = model.integer_var(lb=0, ub=float('inf'), name='x16')
x17 = model.integer_var(lb=0, ub=float('inf'), name='x17')
x18 = model.integer_var(lb=0, ub=float('inf'), name='x18')
x19 = model.integer_var(lb=0, ub=float('inf'), name='x19')
x20 = model.integer_var(lb=0, ub=float('inf'), name='x20')
x21 = model.integer_var(lb=0, ub=float('inf'), name='x21')
x22 = model.integer_var(lb=0, ub=float('inf'), name='x22')
x23 = model.integer_var(lb=0, ub=float('inf'), name='x23')
x24 = model.integer_var(lb=0, ub=float('inf'), name='x24')
x25 = model.integer_var(lb=0, ub=float('inf'), name='x25')
x26 = model.integer_var(lb=0, ub=float('inf'), name='x26')
x27 = model.integer_var(lb=0, ub=float('inf'), name='x27')
x28 = model.integer_var(lb=0, ub=float('inf'), name='x28')
x29 = model.integer_var(lb=0, ub=float('inf'), name='x29')
x30 = model.integer_var(lb=0, ub=float('inf'), name='x30')
x31 = model.integer_var(lb=0, ub=float('inf'), name='x31')
x32 = model.integer_var(lb=0, ub=float('inf'), name='x32')
x33 = model.integer_var(lb=0, ub=float('inf'), name='x33')
x34 = model.integer_var(lb=0, ub=float('inf'), name='x34')

# Defining the Objective Function
model.maximize(1.45 * p1 + 1.50 * p2 + 2.30 * p3 + 2.15 * p4 + \
               1.90 * p5 + 3.50 * p6 + 2.20 * p7 + 2.70 * p8 + 4.15 * p9 + \
               2.10 * p10 + 1.90 * p11 + 1.10 * p12 + 1.10 * p13 + 2.15 * p14 + \
               1.00 * p15 + 1.90 * p16 + 1.90 * p17 + 9.75 * p18 + 9.10 * p19 + 12.40 * p20 + \
               10.90 * p21 + 13.20 * p22 + 17.50 * p23 + 8.50 * p24 + \
               6.50 * p25 + 3.60 * p26 + 10.60 * p27 + 4.75 * p28 + 6.00 * p29 + \
               3.10 * p30 + 7.40 * p31 + 2.40 * p32 + 1.50 * p33 + 0.70 * p34 + \
               2.45 * p35 + 1.80 * p36 + 5.35 * p37 + 0.65 * p38 + 1.10 * p39 + 1.30 * p40 - \
               (17.3 * x1 + 1.3 * x2 + 0.50 * x3 + 21.4 * x4 + 1.4 * x5 + \
                14.3 * x6 + 8.1 * x7 + 6.4 * x8 + 6.9 * x9 + 4.8 * x10 + \
                1.2 * x11 + 1.8 * x12 + 6.2 * x13 + 10.8 * x14 + 5.8 * x15 + \
                1.2 * x16 + 0.5 * x17 + 13.0 * x18 + 0.8 * x19 + 2.9 * x20 + \
                2.1 * x21 + 14.1 * x22 + 8.6 * x23 + 1.9 * x24 + 2.3 * x25 + \
                0.4 * x26 + 1.5 * x27 + 4.7 * x28 + 6.9 * x29 + 2.2 * x30 + 11.2 * x31 + \
                8.9 * x32 + 4.5 * x33 + 1.0 * x34))

# Constraints for Ingredient Usages for Each Menu Item
model.add_constraint(
    0.022 * p1 + 0.022 * p2 + 0.022 * p3 + 0.024 * p4 + 0.025 * p5 + 0.019 * p6 + 0.022 * p7 + 0.026 * p8 + 0.022 * p9 + 0.022 * p10 + 0.027 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.030 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.011 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x1,
    ctname='c1')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.180 * p3 + 0.120 * p4 + 0.060 * p5 + 0.180 * p6 + 0.160 * p7 + 0.000 * p8 + 0.240 * p9 + 0.060 * p10 + 0.030 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.240 * p18 + 0.180 * p19 + 0.000 * p20 + 0.000 * p21 + 0.250 * p22 + 0.000 * p23 + 0.250 * p24 + 0.250 * p25 + 0.250 * p26 + 0.250 * p27 + 0.250 * p28 + 0.125 * p29 + 0.125 * p30 + 0.125 * p31 + 0.125 * p32 + 0.000 * p33 + 0.125 * p34 + 0.000 * p35 + 0.000 * p36 + 0.250 * p37 + 0.240 * p38 + 0.240 * p39 + 0.240 * p40 <= x2,
    ctname='c2')
model.add_constraint(
    0.040 * p1 + 0.080 * p2 + 0.040 * p3 + 0.040 * p4 + 0.040 * p5 + 0.040 * p6 + 0.040 * p7 + 0.040 * p8 + 0.040 * p9 + 0.200 * p10 + 0.030 * p11 + 0.160 * p12 + 0.160 * p13 + 0.160 * p14 + 0.160 * p15 + 0.160 * p16 + 0.160 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.066 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.040 * p26 + 0.000 * p27 + 0.000 * p28 + 0.008 * p29 + 0.008 * p30 + 0.008 * p31 + 0.008 * p32 + 1.333 * p33 + 0.143 * p34 + 0.933 * p35 + 0.933 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x3,
    ctname='c3')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.008 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x4,
    ctname='c4')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.312 * p21 + 0.000 * p22 + 0.480 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x5,
    ctname='c5')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.028 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.057 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.021 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.057 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x6,
    ctname='c6')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.008 * p18 + 0.000 * p19 + 0.008 * p20 + 0.000 * p21 + 0.005 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x7,
    ctname='c7')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.006 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.012 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.028 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x8,
    ctname='c8')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.006 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x9,
    ctname='c9')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.006 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.012 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x10,
    ctname='c10')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.120 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x11,
    ctname='c11')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.029 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.440 * p28 + 0.036 * p29 + 0.000 * p30 + 0.036 * p31 + 0.036 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.058 * p38 + 0.000 * p39 + 0.000 * p40 <= x12,
    ctname='c12')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.010 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x13,
    ctname='c13')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.300 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x14,
    ctname='c14')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.048 * p18 + 0.048 * p19 + 0.480 * p20 + 0.250 * p21 + 0.480 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x15,
    ctname='c15')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.200 * p18 + 0.200 * p19 + 0.200 * p20 + 0.010 * p21 + 0.100 * p22 + 0.200 * p23 + 0.000 * p24 + 0.000 * p25 + 0.005 * p26 + 0.005 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.005 * p34 + 0.100 * p35 + 0.100 * p36 + 0.000 * p37 + 0.000 * p38 + 0.025 * p39 + 0.025 * p40 <= x16,
    ctname='c16')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.050 * p18 + 0.030 * p19 + 0.050 * p20 + 0.012 * p21 + 0.025 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x17,
    ctname='c17')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.075 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.075 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.010 * p39 + 0.015 * p40 <= x18,
    ctname='c18')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.100 * p18 + 0.100 * p19 + 0.100 * p20 + 0.025 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x19,
    ctname='c19')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.166 * p18 + 0.333 * p19 + 0.333 * p20 + 0.000 * p21 + 0.166 * p22 + 0.333 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x20,
    ctname='c20')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.900 * p19 + 0.000 * p20 + 0.200 * p21 + 0.000 * p22 + 0.460 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x21,
    ctname='c21')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.084 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.042 * p22 + 0.084 * p23 + 0.127 * p24 + 0.127 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.127 * p37 + 0.000 * p38 + 0.016 * p39 + 0.021 * p40 <= x22,
    ctname='c22')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.004 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x23,
    ctname='c23')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.020 * p16 + 0.000 * p17 + 0.000 * p18 + 0.120 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.060 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.480 * p35 + 0.240 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x24,
    ctname='c24')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.240 * p18 + 0.000 * p19 + 0.360 * p20 + 0.000 * p21 + 0.125 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x25,
    ctname='c25')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.600 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x26,
    ctname='c26')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.048 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x27,
    ctname='c27')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.060 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.125 * p24 + 0.120 * p25 + 0.125 * p26 + 0.125 * p27 + 0.125 * p28 + 0.000 * p29 + 0.125 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.125 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x28,
    ctname='c28')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.340 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.500 * p27 + 0.000 * p28 + 0.250 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x29,
    ctname='c29')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.138 * p29 + 0.000 * p30 + 0.138 * p31 + 0.138 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x30,
    ctname='c30')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.040 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x31,
    ctname='c31')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.000 * p31 + 0.025 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x32,
    ctname='c32')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.000 * p28 + 0.000 * p29 + 0.000 * p30 + 0.555 * p31 + 0.000 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x33,
    ctname='c33')
model.add_constraint(
    0.000 * p1 + 0.000 * p2 + 0.000 * p3 + 0.000 * p4 + 0.000 * p5 + 0.000 * p6 + 0.000 * p7 + 0.000 * p8 + 0.000 * p9 + 0.000 * p10 + 0.000 * p11 + 0.000 * p12 + 0.000 * p13 + 0.000 * p14 + 0.000 * p15 + 0.000 * p16 + 0.000 * p17 + 0.000 * p18 + 0.000 * p19 + 0.000 * p20 + 0.000 * p21 + 0.000 * p22 + 0.000 * p23 + 0.000 * p24 + 0.000 * p25 + 0.000 * p26 + 0.000 * p27 + 0.200 * p28 + 0.200 * p29 + 0.200 * p30 + 0.000 * p31 + 0.200 * p32 + 0.000 * p33 + 0.000 * p34 + 0.000 * p35 + 0.000 * p36 + 0.000 * p37 + 0.000 * p38 + 0.000 * p39 + 0.000 * p40 <= x34,
    ctname='c34')

# Constraints for Sales Distribution
model.add_constraint(p1 >= 0.1000 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c35')
model.add_constraint(p2 >= 0.0400 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c36')
model.add_constraint(p3 >= 0.0700 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c37')
model.add_constraint(p4 >= 0.0600 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c38')
model.add_constraint(p5 >= 0.0300 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c39')
model.add_constraint(p6 >= 0.0250 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c40')
model.add_constraint(p7 >= 0.0100 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c41')
model.add_constraint(p8 >= 0.0125 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c42')
model.add_constraint(p9 >= 0.0400 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c43')
model.add_constraint(p10 >= 0.0075 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c44')
model.add_constraint(p11 >= 0.005 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c45')
model.add_constraint(p12 >= 0.08 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c46')
model.add_constraint(p13 >= 0.0425 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c47')
model.add_constraint(p14 >= 0.01 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c48')
model.add_constraint(p15 >= 0.01 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c49')
model.add_constraint(p16 >= 0.0125 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c50')
model.add_constraint(p17 >= 0.0025 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c51')
model.add_constraint(p18 >= 0.0275 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c52')
model.add_constraint(p19 >= 0.0225 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c53')
model.add_constraint(p20 >= 0.0125 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c54')
model.add_constraint(p21 >= 0.015 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c55')
model.add_constraint(p22 >= 0.02 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c56')
model.add_constraint(p23 >= 0.0225 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c57')
model.add_constraint(p24 >= 0.0350 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c58')
model.add_constraint(p25 >= 0.0175 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c59')
model.add_constraint(p26 >= 0.01 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c60')
model.add_constraint(p27 >= 0.02 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c61')
model.add_constraint(p28 >= 0.0225 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c62')
model.add_constraint(p29 >= 0.0275 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c63')
model.add_constraint(p30 >= 0.0175 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c64')
model.add_constraint(p31 >= 0.02 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c65')
model.add_constraint(p32 >= 0.0025 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c66')
model.add_constraint(p33 >= 0.0075 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c67')
model.add_constraint(p34 >= 0.0175 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c68')
model.add_constraint(p35 >= 0.03 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c69')
model.add_constraint(p36 >= 0.025 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c70')
model.add_constraint(p37 >= 0.01 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c71')
model.add_constraint(p38 >= 0.0175 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c72')
model.add_constraint(p39 >= 0.0225 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c73')
model.add_constraint(p40 >= 0.02 * (
        p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 + p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19 + p20 + p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28 + p29 + p30 + p31 + p32 + p33 + p34 + p35 + p36 + p37 + p38 + p39 + p40),
                     ctname='c74')

BETA = 0.85  # Purchase discount coefficient

# Purchasing Ingredients Price
PC_x1 = 20.4 * BETA
PC_x2 = 1.6 * BETA
PC_x3 = 0.6 * BETA
PC_x4 = 25.2 * BETA
PC_x5 = 1.7 * BETA
PC_x6 = 16.9 * BETA
PC_x7 = 9.5 * BETA
PC_x8 = 7.6 * BETA
PC_x9 = 8.2 * BETA
PC_x10 = 5.7 * BETA
PC_x11 = 1.4 * BETA
PC_x12 = 2.2 * BETA
PC_x13 = 7.3 * BETA
PC_x14 = 12.8 * BETA
PC_x15 = 6.9 * BETA
PC_x16 = 1.4 * BETA
PC_x17 = 0.6 * BETA
PC_x18 = 15.3 * BETA
PC_x19 = 1.00 * BETA
PC_x20 = 3.47 * BETA
PC_x21 = 2.4 * BETA
PC_x22 = 16.6 * BETA
PC_x23 = 10.2 * BETA
PC_x24 = 2.3 * BETA
PC_x25 = 2.7 * BETA
PC_x26 = 0.5 * BETA
PC_x27 = 1.8 * BETA
PC_x28 = 5.6 * BETA
PC_x29 = 8.2 * BETA
PC_x30 = 2.6 * BETA
PC_x31 = 13.2 * BETA
PC_x32 = 10.5 * BETA
PC_x33 = 5.30 * BETA
PC_x34 = 1.22 * BETA

# Constraint for Budget
model.add_constraint(PC_x1 * x1 + PC_x2 * x2 + PC_x3 * x3 + PC_x4 * x4 + PC_x5 * x5 +
                     PC_x6 * x6 + PC_x7 * x7 + PC_x8 * x8 + PC_x9 * x9 + PC_x10 * x10 +
                     PC_x11 * x11 + PC_x12 * x12 + PC_x13 * x13 + PC_x14 * x14 + PC_x15 * x15 +
                     PC_x16 * x16 + PC_x17 * x17 + PC_x18 * x18 + PC_x19 * x19 + PC_x20 * x20 +
                     PC_x21 * x21 + PC_x22 * x22 + PC_x23 * x23 + PC_x24 * x24 + PC_x25 * x25 +
                     PC_x26 * x26 + PC_x27 * x27 + PC_x28 * x28 + PC_x29 * x29 + PC_x30 * x30 +
                     PC_x31 * x31 + PC_x32 * x32 + PC_x33 * x33 + PC_x34 * x34 <= 2500, ctname='c75')

# Simulation Script
solution = model.solve()

# Upon simulation
print(solution)
print('---------------------------')

# The total purchase price of each ingredient

# Input ingredients price = its price * its number of ingredients

ii_price_x1 = PC_x1 * solution.get_value(x1)
ii_price_x2 = PC_x2 * solution.get_value(x2)
ii_price_x3 = PC_x3 * solution.get_value(x3)
ii_price_x4 = PC_x4 * solution.get_value(x4)
ii_price_x5 = PC_x5 * solution.get_value(x5)
ii_price_x6 = PC_x6 * solution.get_value(x6)
ii_price_x7 = PC_x7 * solution.get_value(x7)
ii_price_x8 = PC_x8 * solution.get_value(x8)
ii_price_x9 = PC_x9 * solution.get_value(x9)
ii_price_x10 = PC_x10 * solution.get_value(x10)
ii_price_x11 = PC_x11 * solution.get_value(x11)
ii_price_x12 = PC_x12 * solution.get_value(x12)
ii_price_x13 = PC_x13 * solution.get_value(x13)
ii_price_x14 = PC_x14 * solution.get_value(x14)
ii_price_x15 = PC_x15 * solution.get_value(x15)
ii_price_x16 = PC_x16 * solution.get_value(x16)
ii_price_x17 = PC_x17 * solution.get_value(x17)
ii_price_x18 = PC_x18 * solution.get_value(x18)
ii_price_x19 = PC_x19 * solution.get_value(x19)
ii_price_x20 = PC_x20 * solution.get_value(x20)
ii_price_x21 = PC_x21 * solution.get_value(x21)
ii_price_x22 = PC_x22 * solution.get_value(x22)
ii_price_x23 = PC_x23 * solution.get_value(x23)
ii_price_x24 = PC_x24 * solution.get_value(x24)
ii_price_x25 = PC_x25 * solution.get_value(x25)
ii_price_x26 = PC_x26 * solution.get_value(x26)
ii_price_x27 = PC_x27 * solution.get_value(x27)
ii_price_x28 = PC_x28 * solution.get_value(x28)
ii_price_x29 = PC_x29 * solution.get_value(x29)
ii_price_x30 = PC_x30 * solution.get_value(x30)
ii_price_x31 = PC_x31 * solution.get_value(x31)
ii_price_x32 = PC_x32 * solution.get_value(x32)
ii_price_x33 = PC_x33 * solution.get_value(x33)
ii_price_x34 = PC_x34 * solution.get_value(x34)


# Exact production cost

ip_price_p1 = 0.022 * PC_x1 + 0.040 * PC_x3
ip_price_p2 = 0.022 * PC_x1 + 0.080 * PC_x3
ip_price_p3 = 0.022 * PC_x1 + 0.180 * PC_x2 + 0.040 * PC_x3
ip_price_p4 = 0.024 * PC_x1 + 0.120 * PC_x2 + 0.040 * PC_x3
ip_price_p5 = 0.025 * PC_x1 + 0.060 * PC_x2 + 0.040 * PC_x3
ip_price_p6 = 0.019 * PC_x1 + 0.180 * PC_x2 + 0.040 * PC_x3 + 0.028 * PC_x6
ip_price_p7 = 0.022 * PC_x1 + 0.160 * PC_x2 + 0.040 * PC_x3
ip_price_p8 = 0.026 * PC_x1 + 0.040 * PC_x3 + 0.060 * PC_x28
ip_price_p9 = 0.022 * PC_x1 + 0.240 * PC_x2 + 0.040 * PC_x3 + 0.040 * PC_x31
ip_price_p10 = 0.022 * PC_x1 + 0.060 * PC_x2 + 0.200 * PC_x3
ip_price_p11 = 0.027 * PC_x1 + 0.030 * PC_x2 + 0.030 * PC_x3
ip_price_p12 = 0.160 * PC_x3 + 0.006 * PC_x8
ip_price_p13 = 0.160 * PC_x3 + 0.006 * PC_x9
ip_price_p14 = 0.160 * PC_x3 + 0.008 * PC_x4
ip_price_p15 = 0.160 * PC_x3 + 0.006 * PC_x10
ip_price_p16 = 0.160 * PC_x3 + 0.012 * PC_x8 + 0.029 * PC_x12
ip_price_p17 = 0.160 * PC_x3 + 0.120 * PC_x11
ip_price_p18 = 0.240 * PC_x2 + 0.008 * PC_x7 + 0.048 * PC_x15 + 0.200 * PC_x16 + 0.050 * PC_x17 + 0.075 * PC_x18 + 0.100 * PC_x19 + 0.166 * PC_x20 + 0.084 * PC_x22 + 0.240 * PC_x25
ip_price_p19 = 0.180 * PC_x2 + 0.048 * PC_x15 + 0.200 * PC_x16 + 0.030 * PC_x17 + 0.100 * PC_x19 + 0.333 * PC_x20 + 0.900 * PC_x21 + 0.120 * PC_x24
ip_price_p20 = 0.008 * PC_x7 + 0.010 * PC_x13 + 0.480 * PC_x15 + 0.200 * PC_x16 + 0.050 * PC_x17 + 0.100 * PC_x19 + 0.333 * PC_x20 + 0.004 * PC_x23 + 0.360 * PC_x25 + 0.600 * PC_x26
ip_price_p21 = 0.312 * PC_x5 + 0.250 * PC_x15 + 0.010 * PC_x16 + 0.012 * PC_x17 + 0.025 * PC_x19 + 0.200 * PC_x21 + 0.340 * PC_x29
ip_price_p22 = 0.250 * PC_x2 + 0.066 * PC_x3 + 0.005 * PC_x7 + 0.480 * PC_x15 + 0.100 * PC_x16 + 0.025 * PC_x17 + 0.075 * PC_x18 + 0.166 * PC_x20 + 0.042 * PC_x22 + 0.125 * PC_x25
ip_price_p23 = 0.480 * PC_x5 + 0.300 * PC_x14 + 0.200 * PC_x16 + 0.333 * PC_x20 + 0.460 * PC_x21 + 0.084 * PC_x22 + 0.060 * PC_x24 + 0.048 * PC_x27
ip_price_p24 = 0.250 * PC_x2 + 0.057 * PC_x6 + 0.127 * PC_x22 + 0.125 * PC_x28
ip_price_p25 = 0.250 * PC_x2 + 0.127 * PC_x22 + 0.120 * PC_x28
ip_price_p26 = 0.030 * PC_x1 + 0.250 * PC_x2 + 0.040 * PC_x3 + 0.005 * PC_x16 + 0.125 * PC_x28
ip_price_p27 = 0.250 * PC_x2 + 0.005 * PC_x16 + 0.125 * PC_x28 + 0.500 * PC_x29
ip_price_p28 = 0.250 * PC_x2 + 0.440 * PC_x12 + 0.125 * PC_x28 + 0.200 * PC_x34
ip_price_p29 = 0.125 * PC_x2 + 0.008 * PC_x3 + 0.036 * PC_x12 + 0.250 * PC_x29 + 0.138 * PC_x30 + 0.200 * PC_x34
ip_price_p30 = 0.125 * PC_x2 + 0.008 * PC_x3 + 0.021 * PC_x6 + 0.125 * PC_x28 + 0.200 * PC_x34
ip_price_p31 = 0.125 * PC_x2 + 0.008 * PC_x3 + 0.036 * PC_x12 + 0.138 * PC_x30 + 0.555 * PC_x33
ip_price_p32 = 0.125 * PC_x2 + 0.008 * PC_x3 + 0.036 * PC_x12 + 0.138 * PC_x30 + 0.025 * PC_x32 + 0.200 * PC_x34
ip_price_p33 = 1.333 * PC_x3 + 0.028 * PC_x8
ip_price_p34 = 0.011 * PC_x1 + 0.125 * PC_x2 + 0.143 * PC_x3 + 0.005 * PC_x16
ip_price_p35 = 0.933 * PC_x3 + 0.100 * PC_x16 + 0.480 * PC_x24
ip_price_p36 = 0.933 * PC_x3 + 0.012 * PC_x10 + 0.100 * PC_x16 + 0.240 * PC_x24
ip_price_p37 = 0.250 * PC_x2 + 0.057 * PC_x6 + 0.127 * PC_x22 + 0.125 * PC_x28
ip_price_p38 = 0.240 * PC_x2 + 0.058 * PC_x12
ip_price_p39 = 0.240 * PC_x2 + 0.025 * PC_x16 + 0.010 * PC_x18 + 0.016 * PC_x22
ip_price_p40 = 0.240 * PC_x2 + 0.025 * PC_x16 + 0.015 * PC_x18 + 0.021 * PC_x22

# Selling coefficient
ALPHA_1 = 3.5   #for Coffee
ALPHA_2 = 8     #for Tea
ALPHA_3 = 2.3   #for Cake
ALPHA_4 = 2.4   #for Milkshake
ALPHA_5 = 2.4   #for Smoothie
ALPHA_6 = 1.5   #for Other drinks

# Output production price
Op_price_p1 = ip_price_p1 * ALPHA_1
Op_price_p2 = ip_price_p2 * ALPHA_1
Op_price_p3 = ip_price_p3 * ALPHA_1
Op_price_p4 = ip_price_p4 * ALPHA_1
Op_price_p5 = ip_price_p5 * ALPHA_1
Op_price_p6 = ip_price_p6 * ALPHA_1
Op_price_p7 = ip_price_p7 * ALPHA_1
Op_price_p8 = ip_price_p8 * ALPHA_1
Op_price_p9 = ip_price_p9 * ALPHA_1
Op_price_p10 = ip_price_p10 * ALPHA_1
Op_price_p11 = ip_price_p11 * ALPHA_1
Op_price_p12 = ip_price_p12 * ALPHA_2
Op_price_p13 = ip_price_p13 * ALPHA_2
Op_price_p14 = ip_price_p14 * ALPHA_2
Op_price_p15 = ip_price_p15 * ALPHA_2
Op_price_p16 = ip_price_p16 * ALPHA_2
Op_price_p17 = ip_price_p17 * ALPHA_2
Op_price_p18 = ip_price_p18 * ALPHA_3
Op_price_p19 = ip_price_p19 * ALPHA_3
Op_price_p20 = ip_price_p20 * ALPHA_3
Op_price_p21 = ip_price_p21 * ALPHA_3
Op_price_p22 = ip_price_p22 * ALPHA_3
Op_price_p23 = ip_price_p23 * ALPHA_3
Op_price_p24 = ip_price_p24 * ALPHA_4
Op_price_p25 = ip_price_p25 * ALPHA_4
Op_price_p26 = ip_price_p26 * ALPHA_4
Op_price_p27 = ip_price_p27 * ALPHA_4
Op_price_p28 = ip_price_p28 * ALPHA_4
Op_price_p29 = ip_price_p29 * ALPHA_5
Op_price_p30 = ip_price_p30 * ALPHA_5
Op_price_p31 = ip_price_p31 * ALPHA_5
Op_price_p32 = ip_price_p32 * ALPHA_5
Op_price_p33 = ip_price_p33 * ALPHA_6
Op_price_p34 = ip_price_p34 * ALPHA_6
Op_price_p35 = ip_price_p35 * ALPHA_6
Op_price_p36 = ip_price_p36 * ALPHA_6
Op_price_p37 = ip_price_p37 * ALPHA_6
Op_price_p38 = ip_price_p38 * ALPHA_6
Op_price_p39 = ip_price_p39 * ALPHA_6
Op_price_p40 = ip_price_p40 * ALPHA_6

# The total selling price of each product
ts_price_p1 = Op_price_p1 * solution.get_value(p1)
ts_price_p2 = Op_price_p2 * solution.get_value(p2)
ts_price_p3 = Op_price_p3 * solution.get_value(p3)
ts_price_p4 = Op_price_p4 * solution.get_value(p4)
ts_price_p5 = Op_price_p5 * solution.get_value(p5)
ts_price_p6 = Op_price_p6 * solution.get_value(p6)
ts_price_p7 = Op_price_p7 * solution.get_value(p7)
ts_price_p8 = Op_price_p8 * solution.get_value(p8)
ts_price_p9 = Op_price_p9 * solution.get_value(p9)
ts_price_p10 = Op_price_p10 * solution.get_value(p10)
ts_price_p11 = Op_price_p11 * solution.get_value(p11)
ts_price_p12 = Op_price_p12 * solution.get_value(p12)
ts_price_p13 = Op_price_p13 * solution.get_value(p13)
ts_price_p14 = Op_price_p14 * solution.get_value(p14)
ts_price_p15 = Op_price_p15 * solution.get_value(p15)
ts_price_p16 = Op_price_p16 * solution.get_value(p16)
ts_price_p17 = Op_price_p17 * solution.get_value(p17)
ts_price_p18 = Op_price_p18 * solution.get_value(p18)
ts_price_p19 = Op_price_p19 * solution.get_value(p19)
ts_price_p20 = Op_price_p20 * solution.get_value(p20)
ts_price_p21 = Op_price_p21 * solution.get_value(p21)
ts_price_p22 = Op_price_p22 * solution.get_value(p22)
ts_price_p23 = Op_price_p23 * solution.get_value(p23)
ts_price_p24 = Op_price_p24 * solution.get_value(p24)
ts_price_p25 = Op_price_p25 * solution.get_value(p25)
ts_price_p26 = Op_price_p26 * solution.get_value(p26)
ts_price_p27 = Op_price_p27 * solution.get_value(p27)
ts_price_p28 = Op_price_p28 * solution.get_value(p28)
ts_price_p29 = Op_price_p29 * solution.get_value(p29)
ts_price_p30 = Op_price_p30 * solution.get_value(p30)
ts_price_p31 = Op_price_p31 * solution.get_value(p31)
ts_price_p32 = Op_price_p32 * solution.get_value(p32)
ts_price_p33 = Op_price_p33 * solution.get_value(p33)
ts_price_p34 = Op_price_p34 * solution.get_value(p34)
ts_price_p35 = Op_price_p35 * solution.get_value(p35)
ts_price_p36 = Op_price_p36 * solution.get_value(p36)
ts_price_p37 = Op_price_p37 * solution.get_value(p37)
ts_price_p38 = Op_price_p38 * solution.get_value(p38)
ts_price_p39 = Op_price_p39 * solution.get_value(p39)
ts_price_p40 = Op_price_p40 * solution.get_value(p40)

product_prices=[ts_price_p1 ,ts_price_p2 ,ts_price_p3 ,ts_price_p4 ,ts_price_p5 ,ts_price_p6 ,ts_price_p7 ,ts_price_p8 ,ts_price_p9 ,ts_price_p10,ts_price_p11,ts_price_p12,ts_price_p13,ts_price_p14,ts_price_p15,ts_price_p16,ts_price_p17,ts_price_p18,ts_price_p19,ts_price_p20,ts_price_p21,ts_price_p22,ts_price_p23,ts_price_p24,ts_price_p25,ts_price_p26,ts_price_p27,ts_price_p28,ts_price_p29,ts_price_p30,ts_price_p31,ts_price_p32,ts_price_p33,ts_price_p34,ts_price_p35,ts_price_p36,ts_price_p37,ts_price_p38,ts_price_p39,ts_price_p40]

GrossProfit = ts_price_p1 + ts_price_p2 + ts_price_p3 + ts_price_p4 + ts_price_p5 + ts_price_p6 + ts_price_p7 + ts_price_p8 + ts_price_p9 + ts_price_p10 + ts_price_p11 + ts_price_p12 + ts_price_p13 + ts_price_p14 + ts_price_p15 + ts_price_p16 + ts_price_p17 + ts_price_p18 + ts_price_p19 + ts_price_p20 + ts_price_p21 + ts_price_p22 + ts_price_p23 + ts_price_p24 + ts_price_p25 + ts_price_p26 + ts_price_p27 + ts_price_p28 + ts_price_p29 + ts_price_p30 + ts_price_p31 + ts_price_p32 + ts_price_p33 + ts_price_p34 + ts_price_p35 + ts_price_p36 + ts_price_p37 + ts_price_p38 + ts_price_p39 + ts_price_p40

InventoryCost = ii_price_x1 + ii_price_x2 + ii_price_x3 + ii_price_x4 + ii_price_x5 + ii_price_x6 + ii_price_x7 + ii_price_x8 + ii_price_x9 + ii_price_x10 + ii_price_x11 + ii_price_x12 + ii_price_x13 + ii_price_x14 + ii_price_x15 + ii_price_x16 + ii_price_x17 + ii_price_x18 + ii_price_x19 + ii_price_x20 + ii_price_x21 + ii_price_x22 + ii_price_x23 + ii_price_x24 + ii_price_x25 + ii_price_x26 + ii_price_x27 + ii_price_x28 + ii_price_x29 + ii_price_x30 + ii_price_x31 + ii_price_x32 + ii_price_x33 + ii_price_x34
print(InventoryCost)
NetProfit = GrossProfit - InventoryCost

# print(f'GrossProfit: {GrossProfit}')
# print(f'InventoryCost: {InventoryCost}')
# print(f'NetProfit: {NetProfit}')
# # The difference between the price of net profit,Gross profit and the price of objective function is because the production price of the product in the objective function has been rounded up.
# print('---------------------------')
#
#
# print(f'output price:\n'
#       f'Espresso:{ip_price_p1}|{Op_price_p1}|{ts_price_p1}\n'
#       f'Americano:{ip_price_p2}|{Op_price_p2}|{ts_price_p2}\n'
#       f'Latte:{ip_price_p3}|{Op_price_p3}|{ts_price_p3}\n'
#       f'Cappuccino:{ip_price_p4}|{Op_price_p4}|{ts_price_p4}\n'
#       f'Macchiato:{ip_price_p5}|{Op_price_p5}|{ts_price_p5}\n'
#       f'Mocha:{ip_price_p6}|{Op_price_p6}|{ts_price_p6}\n'
#       f'Flat white:{ip_price_p7}|{Op_price_p7}|{ts_price_p7}\n'
#       f'Affogato:{ip_price_p8}|{Op_price_p8}|{ts_price_p8}\n'
#       f'Caramel macchiato:{ip_price_p9}|{Op_price_p9}|{ts_price_p9}\n'
#       f'Misto:{ip_price_p10}|{Op_price_p10}|{ts_price_p10}\n'
#       f'Cortado:{ip_price_p11}|{Op_price_p11}|{ts_price_p11}\n'
#       f'Black tea:{ip_price_p12}|{Op_price_p12}|{ts_price_p12}\n'
#       f'Green tea:{ip_price_p13}|{Op_price_p13}|{ts_price_p13}\n'
#       f'Sour tea:{ip_price_p14}|{Op_price_p14}|{ts_price_p14}\n'
#       f'Mint tea:{ip_price_p15}|{Op_price_p15}|{ts_price_p15}\n'
#       f'Earl grey tea:{ip_price_p16}|{Op_price_p16}|{ts_price_p16}\n'
#       f'Ginger tea:{ip_price_p17}|{Op_price_p17}|{ts_price_p17}\n'
#       f'Chocolate cake:{ip_price_p18}|{Op_price_p18}|{ts_price_p18}\n'
#       f'Lemon cake:{ip_price_p19}|{Op_price_p19}|{ts_price_p19}\n'
#       f'Carrot cake:{ip_price_p20}|{Op_price_p20}|{ts_price_p20}\n'
#       f'Strawberry cake:{ip_price_p21}|{Op_price_p21}|{ts_price_p21}\n'
#       f'Red velvet cake:{ip_price_p22}|{Op_price_p22}|{ts_price_p22}\n'
#       f'Cheesecake:{ip_price_p23}|{Op_price_p23}|{ts_price_p23}\n'
#       f'Chocolate:{ip_price_p24}|{Op_price_p24}|{ts_price_p24}\n'
#       f'Vanilla:{ip_price_p25}|{Op_price_p25}|{ts_price_p25}\n'
#       f'Coffee:{ip_price_p26}|{Op_price_p26}|{ts_price_p26}\n'
#       f'Strawberry:{ip_price_p27}|{Op_price_p27}|{ts_price_p27}\n'
#       f'Banana:{ip_price_p28}|{Op_price_p28}|{ts_price_p28}\n'
#       f'Strawberry banana:{ip_price_p29}|{Op_price_p29}|{ts_price_p29}\n'
#       f'Chocolate banana:{ip_price_p30}|{Op_price_p30}|{ts_price_p30}\n'
#       f'Mango:{ip_price_p31}|{Op_price_p31}|{ts_price_p31}\n'
#       f'Peanut butter banana:{ip_price_p32}|{Op_price_p32}|{ts_price_p32}\n'
#       f'Ice tea:{ip_price_p33}|{Op_price_p33}|{ts_price_p33}\n'
#       f'Ice coffee:{ip_price_p34}|{Op_price_p34}|{ts_price_p34}\n'
#       f'Lemonade:{ip_price_p35}|{Op_price_p35}|{ts_price_p35}\n'
#       f'Mojito:{ip_price_p36}|{Op_price_p36}|{ts_price_p36}\n'
#       f'Ferappaccino:{ip_price_p37}|{Op_price_p37}|{ts_price_p37}\n'
#       f'Honey & Milk:{ip_price_p38}|{Op_price_p38}|{ts_price_p38}\n'
#       f'Hot chocolate:{ip_price_p39}|{Op_price_p39}|{ts_price_p39}\n'
#       f'Chocolate Milk:{ip_price_p40}|{Op_price_p40}|{ts_price_p40}\n')

